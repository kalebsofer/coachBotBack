services:
  rabbitmq:
    container_name: coach-bot-rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # AMQP protocol
      - "15672:15672"  # Management UI
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    container_name: coach-bot-api
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    ports:
      - "8000:8000"
    env_file: .env
    depends_on:
      rabbitmq:
        condition: service_healthy

  worker:
    container_name: coach-bot-worker
    build:
      context: .
      dockerfile: docker/worker/Dockerfile
    env_file: .env
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  postgres:
    container_name: coach-bot-postgres
    build:
      context: .
      dockerfile: docker/database/Dockerfile
    ports:
      - "5432:5432"
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - PYTHONPATH=/db

  pgadmin:
    container_name: coach-bot-pgadmin
    image: dpage/pgadmin4
    env_file: .env
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy

networks:
  default:
    name: coach-bot-network 

volumes:
  postgres_data: 