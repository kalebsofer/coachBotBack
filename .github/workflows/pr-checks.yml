name: PR Checks

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api, worker]
    
    env:
      OPENAI_API_KEY: "test-key"
      STREAM_API_KEY: "test-stream-key"
      STREAM_SECRET: "test-stream-secret"
      RABBITMQ_HOST: "localhost"
      QUEUE_NAME: "test_queue"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Install Dependencies and Run Tests
      run: |
        cd src/${{ matrix.service }}
        poetry install
        poetry run pytest --cov=app tests/

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api, worker]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Get changed files
      id: changed-files
      run: |
        echo "files=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} | grep "^src/${{ matrix.service }}.*\.py$" | tr '\n' ' ')" >> $GITHUB_OUTPUT

    - name: Lint
      if: steps.changed-files.outputs.files != ''
      run: |
        cd src/${{ matrix.service }}
        poetry install
        for file in ${{ steps.changed-files.outputs.files }}; do
          echo "Checking $file"
          poetry run black $file --check
          poetry run flake8 $file --max-line-length=88 --extend-ignore=E203,W503
        done 