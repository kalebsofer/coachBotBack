name: PR Checks

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api, worker]
    
    env:
      OPENAI_API_KEY: "test-key"
      STREAM_API_KEY: "test-stream-key"
      STREAM_SECRET: "test-stream-secret"
      RABBITMQ_HOST: "localhost"
      QUEUE_NAME: "test_queue"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Set up Poetry environment
      run: |
        poetry config virtualenvs.in-project true
        poetry config virtualenvs.create true

    - name: Install DB package
      working-directory: src/db
      run: |
        poetry install

    - name: Run tests for ${{ matrix.service }}
      working-directory: src/${{ matrix.service }}
      run: |
        poetry install
        PYTHONPATH=${{ github.workspace }}/src poetry run pytest --cov=core tests/

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api, worker]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Lint
      run: |
        cd src/${{ matrix.service }}
        poetry config virtualenvs.create false
        poetry install
        poetry run black . --check
        poetry run flake8 . --max-line-length=88 --extend-ignore=E203,W503,W291 